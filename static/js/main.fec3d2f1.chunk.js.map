{"version":3,"sources":["components/FormControl.jsx","helpers/context.provider.js","components/Form.jsx","components/Modal.jsx","components/ListItem.jsx","components/List.jsx","App.jsx","index.js"],"names":["FormControl","label","value","name","otherProps","className","htmlFor","require","createContext","useState","useContext","Context","jobs","setJobs","ContextProvider","children","Provider","useAppContext","Form","description","location","state","setState","changeHandler","event","target","submitHandler","a","preventDefault","url","encodeURI","fetch","response","json","data","console","error","onSubmit","required","onChange","type","modalElement","document","getElementById","Modal","isOpen","onClose","modalRef","useRef","handleEscape","useCallback","keyCode","hanldeClickOut","current","contains","useEffect","classList","add","addEventListener","remove","removeEventListener","createPortal","Fragment","ref","onClick","ListItem","created_at","title","company_logo","company","company_url","setIsOpen","href","rel","src","alt","moment","fromNow","dangerouslySetInnerHTML","__html","List","map","job","key","id","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fec3d2f1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const FormControl = ({ label, value, name, ...otherProps }) => {\r\n    return (\r\n        <div className={`input-wrapper ${value ? \"shrink\" : \"\"}`}>\r\n            <input value={value} name={name} {...otherProps} />\r\n            <label htmlFor={name}>{label}</label>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nconst { createContext, useState, useContext } = require(\"react\");\r\n\r\nconst Context = createContext({\r\n    jobs: [],\r\n    setJobs: () => {},\r\n});\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n    const [jobs, setJobs] = useState([]);\r\n    return (\r\n        <Context.Provider value={{ jobs, setJobs }}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nexport const useAppContext = () => useContext(Context);\r\n","import React from \"react\";\r\nimport { FormControl } from \"./FormControl\";\r\nimport { useState } from \"react\";\r\nimport { useAppContext } from \"../helpers/context.provider\";\r\n\r\nexport const Form = () => {\r\n    const { setJobs } = useAppContext();\r\n    const [state, setState] = useState({\r\n        description: \"python\",\r\n        location: \"new york\",\r\n    });\r\n    const changeHandler = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.value });\r\n    };\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        const url = encodeURI(\r\n            `https://jobs.github.com/positions.json?description=${state.description}&location=${state.location}`\r\n        );\r\n        try {\r\n            const response = await fetch(\r\n                `https://cors-anywhere.herokuapp.com/${url}`\r\n            );\r\n            const data = await response.json();\r\n            setJobs(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        //setJobs()\r\n    };\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"form-inner\">\r\n                <FormControl\r\n                    required=\"true\"\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                    onChange={changeHandler}\r\n                    value={state.description}\r\n                />\r\n                <FormControl\r\n                    name=\"location\"\r\n                    label=\"Location\"\r\n                    onChange={changeHandler}\r\n                    value={state.location}\r\n                />\r\n                <button className=\"btn btn-form__submit\" type=\"submit\">\r\n                    Search\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useCallback } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nconst modalElement = document.getElementById(\"modal-root\");\r\n\r\nexport const Modal = ({ children, isOpen, onClose }) => {\r\n    const modalRef = useRef(null);\r\n    const handleEscape = useCallback((event) => {\r\n        if (event.keyCode === 27) onClose();\r\n    }, []);\r\n    const hanldeClickOut = useCallback((event) => {\r\n        if (modalRef.current && !modalRef.current.contains(event.target))\r\n            onClose();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            modalElement.classList.add(\"active\");\r\n            document.addEventListener(\"keydown\", handleEscape, false);\r\n            document.addEventListener(\"click\", hanldeClickOut, false);\r\n        } else {\r\n            modalElement.classList.remove(\"active\");\r\n        }\r\n        return () => {\r\n            document.removeEventListener(\"click\", hanldeClickOut, false);\r\n            document.removeEventListener(\"keydown\", handleEscape, false);\r\n        };\r\n    }, [handleEscape, isOpen, modalElement]);\r\n    const clickOutside = () => {\r\n        if (isOpen) {\r\n            onClose();\r\n        }\r\n    };\r\n    return createPortal(\r\n        isOpen ? (\r\n            <React.Fragment>\r\n                <div className=\"overlay\"></div>\r\n                <div className=\"modal\" ref={modalRef} onClick={clickOutside}>\r\n                    <div className=\"modal-inner\">{children}</div>\r\n                </div>\r\n            </React.Fragment>\r\n        ) : null,\r\n        modalElement\r\n    );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { FaClock, FaMapMarker, FaAngleRight } from \"react-icons/fa\";\r\nimport { Modal } from \"./Modal\";\r\nimport { useState } from \"react\";\r\nexport const ListItem = ({\r\n    created_at,\r\n    title,\r\n    company_logo,\r\n    company,\r\n    location,\r\n    description,\r\n    company_url,\r\n    type,\r\n    url,\r\n}) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [copy, setCopy] = useState(false);\r\n    const onModalClose = () => setIsOpen(false);\r\n    const onCloseClick = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"item\" onClick={() => setIsOpen(true)}>\r\n                <div className=\"content\">\r\n                    <div className=\"data\">\r\n                        {company_logo ? (\r\n                            <div className=\"logo\">\r\n                                <a\r\n                                    href={company_url}\r\n                                    title={company}\r\n                                    rel=\"noopener noreferrer\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    <img\r\n                                        src={company_logo}\r\n                                        alt={company + \"-logo\"}\r\n                                    />\r\n                                </a>\r\n                            </div>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                        <div className=\"title\">\r\n                            <h3>{title}</h3>\r\n\r\n                            <a\r\n                                href={company_url}\r\n                                title={company}\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                                className=\"company-link\"\r\n                            >\r\n                                {company}\r\n                            </a>\r\n                            {type === \"Full Time\" ? (\r\n                                <span className=\"type full-time\">{type}</span>\r\n                            ) : (\r\n                                <span className=\"type\">{type}</span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"meta\">\r\n                        <div className=\"flex\">\r\n                            <span className=\"date\">\r\n                                <FaClock />\r\n                                {moment(created_at).fromNow()}\r\n                            </span>\r\n                            <span className=\"location\">\r\n                                <FaMapMarker />\r\n                                {location}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"see-data\">\r\n                    <div></div>\r\n                    <FaAngleRight />\r\n                </div>\r\n            </div>\r\n            <Modal isOpen={isOpen} onClose={onModalClose}>\r\n                <div\r\n                    className=\"description\"\r\n                    dangerouslySetInnerHTML={{ __html: description }}\r\n                ></div>\r\n                <div className=\"actions\">\r\n                    <button className=\"btn btn-inverted\" onClick={onCloseClick}>\r\n                        close\r\n                    </button>\r\n                    <a\r\n                        href={url}\r\n                        title={title}\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                        className=\"company-link\"\r\n                    >\r\n                        <button className=\"btn\">More information</button>\r\n                    </a>\r\n                </div>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useAppContext } from \"../helpers/context.provider\";\r\nimport { ListItem } from \"./ListItem\";\r\n\r\nexport const List = () => {\r\n    const { jobs } = useAppContext();\r\n    return (\r\n        <div className=\"jobs-list\">\r\n            {jobs.map((job) => (\r\n                <ListItem key={job.id} {...job} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\nimport { Form } from \"./components/Form\";\nimport { List } from \"./components/List\";\n\nimport \"./styles/main.scss\";\nexport const App = () => {\n    return (\n        <div className=\"App\">\n            <Form />\n            <List />\n        </div>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport { ContextProvider } from \"./helpers/context.provider\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <ContextProvider>\n      \n                <App />\n\n        </ContextProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}